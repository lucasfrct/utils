## Environment SGDB
version: '3'

services:

  ##################### MYSQL #####################
  environment-mysql:
    profiles: [ "all", "mysql", "sql", "relationals" ]
    container_name: environment-mysql
    image: environment-mysql
    hostname: environment-mysql
    labels:
      description: environment-mysql
      org.opencontainers.image.name: environment-mysql
    build: 
      context: ./sgdb-mysql
      dockerfile: Dockerfile
    working_dir: /var/lib/mysql
    volumes:
      - ./sgdb-mysql/data:/var/lib/mysql
    env_file:
      - ./sgdb-mysql/.env
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    command: --default-authentication-plugin=mysql_native_password
    networks:
      environment-mysql:
    restart: always
    ports:
      - 3306:3306 # host:container

  ##################### POSTGRES #####################
  environment-postgres:
    profiles: [ "all", "postgres", "sql", "relationals" ]
    container_name: environment-postgres
    image: environment-postgres
    hostname: environment-postgres
    labels:
      description: environment-postgres
      org.opencontainers.image.name: environment-postgres
    build:
      context: ./sgdb-postgres
      dockerfile: Dockerfile
    working_dir: /var/lib/postgresql/data
    volumes:
      - ./sgdb-postgres/data:/var/lib/postgresql/data
    env_file:
      - ./sgdb-postgres/.env
    environment:
      POSTGRES_DB: development
      POSTGRES_USER: development
      POSTGRES_PASSWORD: Alterar123
    networks:
      environment-postgres:
    restart: always
    ports:
      - "5432:5432" # host:container

  # ##################### DYNAMODB #####################
  # environment-dynamodb:
  #   profiles: [ "all", "dynamodb", "nosql", "collections" ]
  #   container_name: environment-dynamodb
  #   image: environment-dynamodb
  #   hostname: environment-dynamodb
  #   labels:
  #     description: environment-dynamodb
  #     org.opencontainers.image.name: environment-dynamodb
  #   build: 
  #     context: ./sgdb-dynamodb
  #     dockerfile: Dockerfile
  #   working_dir: /tmp
  #   volumes:
  #     - ./sgdb-postgres/data:/var/lib/postgresql/data
  #   env_file:
  #     - ./sgdb-postgres/.env 
  #   environment:
  #     POSTGRES_DB: development
  #     POSTGRES_USER: development
  #     POSTGRES_PASSWORD: Alterar123
  #   networks:
  #     - local-network
  #   restart: always
  #   ports:
  #     - 5432:5432

  # ##################### ELASTICSEARCH #####################
  # environment-elasticsearch:
  #   profiles: [ "all", "elasticsearch" ]
  #   extends:
  #     file: ./sgdb-elasticsearch/docker-compose.yml
  #     service: environment-elasticsearch

  # ##################### MONGODB #####################
  # environment-mongodb:
  #   profiles: [ "all", "mongodb" ]
  #   extends:
  #     file: ./sgdb-mongodb/docker-compose.yml
  #     service: environment-mongodb

  # ##################### REDIS #####################
  # environment-redis:
  #   profiles: [ "all", "redis" ]
  #   extends:
  #     file: ./sgdb-redis/docker-compose.yml
  #     service: environment-redis

##################### VOLUMES #####################
volumes:
  environment-mysql:
    name: environment-mysql
  environment-postgres:
    name: environment-postgres
  environment-dynamodb:
    name: environment-dynamodb
  # environment-elasticsearch:
  #   name: environment-elasticsearch
  # environment-mongodb:
  #   name: environment-mongodb
  # environment-redis:
  #   name: environment-redis

##################### NETWORKS #####################
networks:
  environment-mysql:
    name: environment-mysql
  environment-postgres:
    name: environment-postgres
  environment-dynamodb:
    name: environment-dynamodb
  # environment-elasticsearch:
  #   name: environment-elasticsearch
  # environment-mongodb:
  #   name: environment-mongodb
  # environment-redis:
  #   name: environment-redis
